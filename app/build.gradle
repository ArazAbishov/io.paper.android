apply plugin: "com.android.application"
apply plugin: "jacoco"

def versions = rootProject.ext.versions
def libraries = rootProject.ext.libraries

android {
    compileSdkVersion versions.sdk
    buildToolsVersion versions.tools

    defaultConfig {
        applicationId "io.paper.android"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.sdk
        versionCode versions.versionCode
        versionName versions.versionName

        // jUnit test runner for android
        testInstrumentationRunner "io.paper.android.PaperInstrumentationTestsRunner"
    }

    lintOptions {
        warningsAsErrors true
        abortOnError true

        disable "GoogleAppIndexingWarning" // App does not have deep linking.
        disable "InvalidPackage" // Okio references java.nio that does not presented in Android SDK.
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

dependencies {
    // Support libraries
    compile "com.android.support:design:${libraries.support}"
    compile "com.android.support:appcompat-v7:${libraries.support}"
    compile "com.android.support:recyclerview-v7:${libraries.support}"
    compile "com.android.support:support-annotations:${libraries.support}"

    // Google dagger
    compile "com.google.dagger:dagger:${libraries.dagger}"
    annotationProcessor "com.google.dagger:dagger-compiler:${libraries.dagger}"

    // Google auto-value
    provided "com.google.auto.value:auto-value:${libraries.autovalue}"
    annotationProcessor "com.google.auto.value:auto-value:${libraries.autovalue}"

    // Auto-value extensions
    compile "com.gabrielittner.auto.value:auto-value-cursor-annotations:${libraries.autovaluecursor}"
    annotationProcessor "com.gabrielittner.auto.value:auto-value-cursor:${libraries.autovaluecursor}"

    // Square libraries
    compile "com.squareup.sqlbrite:sqlbrite:${libraries.sqlbrite}"

    // Jake Wharton libraries
    compile "com.jakewharton.rxbinding:rxbinding:${libraries.rxbinding}"
    compile "com.jakewharton:butterknife:${libraries.butterknife}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${libraries.butterknife}"

    // Test dependencies
    testCompile "junit:junit:${libraries.junit}"
    testCompile "org.assertj:assertj-core:${libraries.assertj}"
    testCompile "org.mockito:mockito-core:${libraries.mockito}"
    testCompile "nl.jqno.equalsverifier:equalsverifier:${libraries.equalsverifier}"

    // Android test dependencies
    androidTestCompile("com.google.truth:truth:${libraries.truth}") {
        exclude group: 'junit' // Android has JUnit built in.
    }

    androidTestCompile "com.android.support.test.espresso:espresso-core:${libraries.espresso}"
    androidTestCompile("com.android.support.test.espresso:espresso-contrib:${libraries.espresso}") {
        // Causes IncompatibleClassChangeError
        exclude module: "support-annotations"
        exclude module: "recyclerview-v7"
        exclude module: "appcompat-v7"
        exclude module: "support-v4"
        exclude module: "design"
    }
}
